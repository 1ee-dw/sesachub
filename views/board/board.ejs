<!DOCTYPE html>
<html lang="ko">
<%- include('../include/include.ejs', {title:"커뮤니티"}); %>
    <link rel="stylesheet" href="/static/css/board.css">

    <body>
        <%- include('../include/header.ejs'); %>
            <div id="board">
                <div>
                    <h1 name="title">
                        <%=board.title%>
                    </h1>
                    <span>
                        <%=board.nk_name%>
                    </span>
                    <span>
                        <%=board.createdAt%>
                    </span>
                </div>

                <p name="content">
                    <%=board.content%>
                </p>

                <div>
                    <span id="like_count">
                        <%= board.dataValues.like_count%>
                    </span>
                    <button type="button" onclick="like('<%=board.b_id%>')">좋아요</button>
                </div>
                <div id="check_bookmark">
                    <span>북마크</span>
                    <% let isBookmarked=board.bookmarks.some(bookmark=> bookmark.u_id === session.u_id) %>
                        <% if (isBookmarked) {%>
                            <a href="#" id="bookmark"
                                onclick="bookmark('<%=board.b_id%>','<%=session.u_id%>')">&#9733;</a>
                            <%} else {%>
                                <a href="#" id="bookmark"
                                    onclick="bookmark('<%=board.b_id%>','<%=session.u_id%>')">&#9734;</a>
                                <%}%>
                </div>
                <button onclick="editBoard('<%=board.b_id%>')">수정</button>
                <button onclick="deleteBoard('<%=board.b_id%>')">삭제</button>
                <!-- <% if (session.u_id===board.u_id) { %>
                    <button onclick="editBoard('<%=board.b_id%>','<%=board.title%>','<%board.content%>')">수정</button>
                    <button onclick="deleteBoard('<%=board.b_id%>')">삭제</button>
                    <%} else if(session.permission==='admin' ) { %>
                        <button onclick="editBoard('<%=board.b_id%>', '<%=board.title%>', '<%=board.content%>')" )"
                            hidden>수정</button>
                        <button onclick="deleteBoard('<%=board.b_id%>')">삭제</button>
                        <%} else { %>
                            <button onclick="editBoard('<%=board.b_id%>', '<%=board.title%>', '<%=board.content%>')"
                                hidden>수정</button>
                            <button onclick="deleteBoard('<%=board.b_id%>')" hidden>삭제</button>
                            <%}%> -->
            </div>
            <div>
                <form name="comment">
                    <input type="hidden" name="b_id" value="<%=board.b_id%>" />
                    <input type="hidden" name="u_id" value="<%=session.u_id%>" />
                    <input type="hidden" name="nk_name" value="<%=session.nk_name%>" />
                    <input type="text" name="comment_content" placeholder="댓글을 입력하세요" required />
                    <a href="#" class="btn" onclick="comment_insert()">댓글 작성</a>
                </form>
                <ul>
                    <% for(comment of board.comments) {%>
                        <ul>
                            <li>
                                <%=comment.nk_name%>
                                    <%=comment.createdAt.toLocaleString("ko-KR")%>
                            </li>
                            <li>
                                <%=comment.content%>
                            </li>
                            <% if (comment.replies.length> 0) {%>
                                <ul>
                                    <% for (reply of comment.replies) {%>
                                        <li>
                                            <input type="hidden" value="<%=reply.parent_id%>">
                                            <%=reply.nk_name %>
                                                <%=reply.createdAt.toLocaleString("ko-KR")%>
                                        </li>
                                        <li>
                                            <%=reply.content%>
                                        </li>
                                        <%}%>
                                </ul>
                                <%}%>
                                    <input type="button" class="btn" id="reply_btn<%=comment.c_id%>"
                                        onclick="call_reply_form('<%=comment.c_id%>')" value="답글 쓰기" />
                                    <form name="reply_form<%=comment.c_id%>" style="display: none">
                                        <input type="hidden" name="b_id" value="<%=board.b_id%>" />
                                        <input type="hidden" name="u_id" value="<%=session.u_id%>" />
                                        <input type="hidden" name="parent_id" value="<%=comment.c_id%>" />
                                        <input type="hidden" name="nk_name" value="<%=session.nk_name%>" />
                                        <input type="text" name="reply_content" placeholder="댓글을 입력하세요" required />
                                        <input type="button" id="reply_insert_btn" class="btn"
                                            onclick="reply_insert('<%=comment.c_id%>')" value="답글 작성" />
                                    </form>
                        </ul>

                        <%}%>
                </ul>
            </div>
            <script>
                const b_id = '<%= board.b_id%>';
                const u_id = "<%= board.u_id%>";
                const sessionUID = "<%= session.u_id %>";
                function deleteBoard(b_id) {
                    if (confirm("글을 삭제하시겠습니까?")) {
                        axios({
                            method: "DELETE",
                            url: "/board",
                            params: { b_id: b_id }
                        }).then(function (res) {
                            location.href = "/board";
                        })
                    }
                }

                function editBoard(b_id) {
                    axios({
                        method: "GET",
                        url: "/board/update",
                        params: { b_id: b_id }
                    }).then((res) => {
                        location.href = '/board/update?b_id=<%=board.b_id%>';
                    });
                }

                async function like(b_id) {
                    const response = await axios({
                        method: "POST",
                        url: "/board/like",
                        data: { b_id: b_id, u_id: u_id }
                    });
                    document.getElementById('like_count').innerText = response.data.like_count;
                }

                async function comment_insert() {
                    const form = document.forms['comment'];
                    await axios({
                        method: "POST",
                        url: "/board/comment",
                        data: {
                            b_id: form.b_id.value,
                            u_id: form.u_id.value,
                            nk_name: form.nk_name.value,
                            content: form.comment_content.value
                        }
                    });
                    location.reload();
                }

                function call_reply_form(c_id) {
                    const form = document.forms[`reply_form${c_id}`];
                    form.style.display = 'block';
                    const btn = document.getElementById(`reply_btn${c_id}`);
                    btn.setAttribute('type', 'hidden');
                }

                async function reply_insert(c_id) {
                    const form = document.forms[`reply_form${c_id}`];
                    await axios({
                        method: "POST",
                        url: "/board/comment",
                        data: {
                            c_id: c_id,
                            b_id: form.b_id.value,
                            parent_id: form.parent_id.value,
                            u_id: form.u_id.value,
                            nk_name: form.nk_name.value,
                            content: form.reply_content.value
                        }
                    });
                    location.reload();
                }

                async function bookmark(b_id, u_id) {
                    const bookmark = document.getElementById('bookmark');
                    const response = await axios({
                        method: "POST",
                        url: "/board/bookmark",
                        data: {
                            b_id: b_id,
                            u_id: u_id
                        }
                    });
                    if (!response.data.result) {
                        bookmark.innerHTML = '&#9733;'
                    } else {
                        bookmark.innerHTML = '&#9734;'
                    }

                }
            </script>
    </body>

</html>